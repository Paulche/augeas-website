.. -*- rst -*-
   restindex
     initialheaderlevel: 2
   /restindex

===============
Todo list
===============

In now particular order, these are the things that need to be addressed,
hopefully soon; patches enthusiastically appreciated: 

* Write descriptors for more files. Eventually, Augeas should cover *all*
  commonly used configuration files
* Reasonable runtime error reporting. Since Augeas is meant to be used as a
  library, spewing errors on the console is useless. Errors encountered
  during parsing are already reported underneath ``/augeas/files``. Many
  other errors, e.g. when the tree was modified in such a way that writing
  it to disk would result in a syntactically incorrect file, need to be
  reported in a similar way.
* Bring the code to production quality. Particularly memory management is a
  sore area, and the current code more than likely leaks like a sieve.
* Make Augeas buildable on more platforms. It has been built on Fedora and
  RHEL, but I have no idea how hard it is to build Augeas on other
  platforms. Given a POSIX C library, the changes needed should be slight.
* Write language bindings for Python . This could happen right
  now. The public API in ``augeas.h`` is pretty stable, and that's all that
  should be visible to users of the library.
* Remove libfa's dependency on glib by using a different hashtable
  implementation (maybe kazlib_) Requiring glib just for a hash table is
  overkill - but so is writing our own.
* Named character classes in regular expressions. Other differences to
  extended POSIX regexps are probably not worth addressing (collating
  sequences) or are impossible to address with true regular expressions
  (back references)
* Use ustr_ for strings instead of naked C strings

.. _Boomerang: http://alliance.seas.upenn.edu/~harmony/
.. _ustr: http://www.and.org/ustr/
.. _kazlib: http://users.footprints.net/~kaz/kazlib.html